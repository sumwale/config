# set PATH to include user's private bin and cargo
GCMDIR=/gcm
if [ -e /usr/local/jdk11 ]; then
  IDEA_JDK=/usr/local/jdk11
  export IDEA_JDK
fi
JAVA8_HOME=/usr/local/jdk8
JAVA_HOME=$JAVA8_HOME
BROWSER=firefox
if which chromium 2>/dev/null >/dev/null; then
  CHROME_BIN="`which chromium 2>/dev/null`"
  export CHROME_BIN
fi
#DOCKER_BUILDKIT=1
DOCKER_TEAM_STUDIO_REPO=docker-registry.hosting:5000/tibco
DOCKER_TIBCO_REGISTRY=registry.tds.tibco.com:30123
DOCKER_TIBCO_REPO=$DOCKER_TIBCO_REGISTRY/tibco
CHORUS_SERVICE_TYPE=ClusterIP
ALPINE_HADOOP_VERSION=cdh54
PYSPARK_DRIVER_PYTHON=ipython3
#CLUTTER_VBLANK=none

if [ -z "$SSH_AUTH_SOCK" ]; then
  if [ -n "$XDG_RUNTIME_DIR" ]; then
    SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/keyring/ssh"
    export SSH_AUTH_SOCK
  else
    SSH_AUTH_SOCK="/run/user/`id -u`/keyring/ssh"
    if [ -e "$SSH_AUTH_SOCK" ]; then
      export SSH_AUTH_SOCK
    else
      SSH_AUTH_SOCK="/var$SSH_AUTH_SOCK"
      if [ -e "$SSH_AUTH_SOCK" ]; then
        export SSH_AUTH_SOCK
      fi
    fi
  fi
fi

if [ -x /usr/lib/seahorse/ssh-askpass ]; then
  SSH_ASKPASS=/usr/lib/seahorse/ssh-askpass
  export SSH_ASKPASS
elif [ -x /usr/libexec/seahorse/ssh-askpass ]; then
  SSH_ASKPASS=/usr/libexec/seahorse/ssh-askpass
  export SSH_ASKPASS
fi

PATH="$PATH:$JAVA_HOME/bin:$HOME/.local/bin:$HOME/.cargo/bin:$HOME/.krew/bin"

export GCMDIR JAVA8_HOME JAVA_HOME BROWSER DOCKER_BUILDKIT DOCKER_TEAM_STUDIO_REPO DOCKER_TIBCO_REGISTRY DOCKER_TIBCO_REPO CHORUS_SERVICE_TYPE ALPINE_HADOOP_VERSION PYSPARK_DRIVER_PYTHON PATH

# gcloud python and new gke plugin
CLOUDSDK_PYTHON=python3
USE_GKE_GCLOUD_AUTH_PLUGIN=True

# k8s config files
KUBECONFIG="$HOME/.kube/config"
if [ -d "$HOME/.kube/configs" ]; then
  for f in $HOME/.kube/configs/*; do
    if [ -r "$f" ]; then
      KUBECONFIG="$KUBECONFIG:$f"
    fi
  done
fi
export CLOUDSDK_PYTHON USE_GKE_GCLOUD_AUTH_PLUGIN KUBECONFIG

[ -r "$HOME/.sh_env.local" ] && . "$HOME/.sh_env.local"
