# Configuration file for docker/podman containers used by linux box scripts.
# This is the common file included by all other configurations.
#
# Value format is as supported by python ConfigParser
# (e.g. https://docs.python.org/3.10/library/configparser.html for Python 3.10 docs)
#
# In addition values can contain environment variables using the notation supported by
# python expandvars (https://docs.python.org/3/library/os.path.html#os.path.expandvars).
# A special LINUXBOX_NAME shell variable is set to the name of the current container.
# Additionally a special notation can be used for current date+time with this notation:
#   ${NOW:<fmt>}". The <fmt> uses the format supported by python strftime
# (https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime)
# while the NOW is the result of datetime.now() call.


# Basic container settings that are documented individually below.
[base]
# Comma separated files to include before applying these settings.
# Paths can be absolute or relative to the location of this file.
includes =
# Bind mount the container $HOME to this local path. This makes it easier for backup
# software and otherwise to read useful container data.
# If not provided then you should explicitly mount required directories in the [mounts]
# section otherwise home will remain completely ephemeral which is not recommended.
home = $HOME/linuxbox/$LINUXBOX_NAME
# If enabled then X server from the user session is available to the container.
xorg = on
# If enabled then pulse/pipewire from the user session is available to the container.
pulseaudio = on
# If enabled then dbus from the user session is available to the container.
dbus = on
# If enabled then Direct Rendering Infrastructure is available to the container.
dri = on
# If enabled then NVIDIA GPUs will be available to the container. You need to install
# NVIDIA container toolkit for this to work. Refer to Arch wiki for details which usually
# works better on most linux distros (https://wiki.archlinux.org/title/docker or
#    https://wiki.archlinux.org/title/podman), and/or the official NVIDIA docs:
#  https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html
nvidia = off
# Enable multilib in pacman configuration, see:
#   https://wiki.archlinux.org/title/Official_repositories#multilib
multilib = off
# Limit the maximum number of processes in the container (to avoid stuff like fork bombs).
pids_limit = 1000
# Logging driver to use. Default for docker/podman is to use journald in modern Linux
# distributions which completely pollutes the journald logs.
log_driver = json-file
# Comma separated options for the logger. The value is expanded by /bin/sh as usual.
log_opt = path=$HOME/.local/share/containers/logs/$LINUXBOX_NAME-${NOW:+%Y-%m-%d_%H.%M.%S}.log,max-size=10m,max-file=3


# The security-opt options to docker/podman. You should restrict these as required.
# If these have to be relaxed for some apps, then it is highly recommended to put
# those in their own separate containers having minimal or no access to original home
# directories to isolate them as much as possible. Do read up on security implications
# before relaxing these.
# See docs like https://docs.docker.com/engine/security/seccomp,
# https://docs.docker.com/engine/security/apparmor etc
[security]
# The options are sent as is to docker/podman e.g. "label=type:container_runtime_t"
#label = type:container_runtime_t


# These are docker/podman volumes that can use either the format of --mount or -v options
# (the scripts make a quick guess by searcing for = or ,).
# These will typically include some directories from your home like Downloads.
[mounts]
# Share terminfo definitions for terminals to work correctly.
terminfo = /usr/share/terminfo:/var/terminfo:ro
# Downloads is used by most container apps to pass over data to original session easily
# so it should never contain any important stuff if mounted in read-write mode.
downloads = $HOME/Downloads:$HOME/Downloads
# This directory can be used to place all your common shell/vim/... configuration files
# that can be easily shared with all the containers by setting up links automatically
# as specified in the next section.
config = $HOME/config:$HOME/config:ro


# These can be used to specify symbolic links to create in the container on first startup.
# Typically this will contain shell, vim and other common configuration files that have
# been mounted in the section above usually in read-only mode.
[links]
bashrc = $HOME/.bashrc -> $HOME/config/.bashrc
aliases = $HOME/.aliases -> $HOME/config/.aliases
sh_env = $HOME/.sh_env -> $HOME/config/.sh_env
fishrc = $HOME/.config/fish/. -> $HOME/config/.config/fish/*
zshrc = $HOME/.zshrc -> $HOME/config/.zshrc
zsh_p10 = $HOME/.p10k.zsh -> $HOME/config/.p10k.zsh
dir_colors = $HOME/.dir_colors -> $HOME/config/.dir_colors
vimrc = $HOME/.vimrc -> $HOME/config/.vimrc
nvimrc = $HOME/.config/nvim/. -> $HOME/config/.config/nvim/*
gitconf = $HOME/.gitconfig -> $HOME/config/.gitconfig
gtk2rc = $HOME/.gtkrc-2.0 -> $HOME/config/.gtkrc-2.0
gtk3rc = $HOME/.config/gtk-3.0/settings.ini -> $HOME/config/.config/gtk-3.0/settings.ini
gtk4rc = $HOME/.config/gtk-4.0/settings.ini -> $HOME/config/.config/gtk-4.0/settings.ini
ariaconf = $HOME/.config/aria2/aria2.conf -> $HOME/config/.config/aria2/aria2.conf
btopconf = $HOME/.config/btop/btop.conf -> $HOME/config/.config/btop/btop.conf


# Environnment variables set for the container using invoking docker/podman environment.
# Shell variable can be specified like usual which are expanded by /bin/sh.
# X, pulse and other such environment variables are set automatically by the settings
# in the [base] section.
# Keys without values can be specified which are sent as such to the "-e" option
# which means they will be set and passed if set in the invoking docker/podman environment.
[env]
XDG_RUNTIME_DIR
TERM
TERMINFO_DIRS=/usr/share/terminfo:/var/terminfo


# Additional apps to be installed in the container. Note that these will go away if the
# container is removed so you should keep persistent data related to apps on separate
# persistent storage specified in the [mounts] section above.
[apps]
# The format is a unique name followed by comma-separated package names of the distro
# specific packages. It can include an "extra-args=" to pass to the package manager.
#firefox = firefox
#firefox_deps = hunspell-en_US,extra-args=--asdeps
